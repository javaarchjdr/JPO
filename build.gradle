buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.1'
    }    
}

plugins {
    id "org.sonarqube" version "2.5"
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'java'
apply plugin: "jacoco"

repositories {
    mavenCentral()
}


dependencies {
    compile 'org.apache.commons:commons-compress:1.18'
    compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
    compile 'org.apache.commons:commons-jcs-core:2.2.1'
    compile 'org.apache.commons:commons-jcs-jcache:2.2'
    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'commons-logging:commons-logging:1.2'
    compile 'commons-net:commons-net:3.6'
    compile 'org.apache.commons:commons-text:1.4'
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.gdata:core:1.47.1'

    compile files('libs/gdata-maps-2.0.jar')
    compile files('libs/gdata-media-1.0.jar')
    compile files('libs/gdata-photos-2.0.jar')
    
    compile 'com.google.guava:guava:26.0-jre'
    compile 'javax.mail:javax.mail-api:1.6.2'
    compile 'com.jcraft:jsch:0.1.54'

    compile files('libs/jwizz-0.1.4.jar')
    
    compile 'org.jxmapviewer:jxmapviewer2:2.4'
    compile 'com.drewnoakes:metadata-extractor:2.11.0'

    compile 'com.miglayout:miglayout-swing:5.2'

    // needed to pull down the August 2018 version from http://www.docking-frames.org/download.html
    //compile group: 'org.dockingframes', name: 'docking-frames-common', version: '1.1.2p6a'
    //compile group: 'org.dockingframes', name: 'docking-frames-core', version: '1.1.2p6a'
    compile files('libs/docking-frames-common.jar')
    compile files('libs/docking-frames-core.jar')

    compile files('libs/TagCloud.jar')
    
    //used by Metadata Extractor. Note only 5.x seems to be compatible
    compile 'com.adobe.xmp:xmpcore:5.1.3'

    testCompile "junit:junit:4.12-beta-3"

}


sourceCompatibility = 1.8
targetCompatibility = 1.8


sourceSets {
    main {
        resources {
            srcDir 'src/images'
            include '**/*.gif'
            include '**/*.jpg'
            
            srcDir 'src/dtd'
            include '**/*.dtd'
            include '**/*.txt'
            include '**/*.css'
            include '**/*.js'
                
            srcDir 'src/main/java/jpo/cache'
            include '**/*.ccf'
        }
    }
    test {
        resources  {
            srcDir 'src/test/images'
            include '**/*.jpg'
        }
    }
}
    

test {
    //println(classpath.asPath)
    //sourceSets.main.resources.each { File file ->
    //println file.name
    //}
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jar {
    baseName = 'jpo'
    version =  '0.13'
    
    manifest {
        attributes(
            "Class-Path": configurations.compile.collect { it.getName() }.join(' '),
            "Main-Class": 'Main',
            'Permissions': 'all-permissions'
        )
        attributes(
            [ "Copy": "(c) 2001-2018, Richard Eigenmann, ZÃ¼rich, Switzerland" ], "Copyright"
        )
    }
    into ('jpo/images') { from 'src/images' }
}


// this task creates the FatJar whith everything in it
shadowJar {
    into ('jpo/images') { from 'src/images' }
}


task run(type: JavaExec) {
    dependsOn shadowJar
    classpath = files( 'build/libs/Jpo-all.jar' )
    main = 'Main'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport